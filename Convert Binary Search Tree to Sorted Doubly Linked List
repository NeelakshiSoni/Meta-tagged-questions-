class Solution:
    def treeToDoublyList(self, root: 'Optional[Node]') -> 'Optional[Node]':
        if not root : 
            return root 
        first , last = None , None 
        
        def dfs(node) : 
            nonlocal first , last 
            if not node : 
                return 
            
            dfs(node.left) 
            
            if last : 
                last.right = node 
                node.left = last 
            else : 
                first = node 
            last = node 
            dfs(node.right)
            
        dfs(root)
        first.left  , last.right = last , first 
        return first 
